  name: Deploy Personal Website

  on:
    push:
      branches: [ main ]
    pull_request:
      branches: [ main ]
    workflow_dispatch:

  jobs:
    quality-check:
      runs-on: ubuntu-latest
      name: Quality Assurance

      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate HTML
        run: |
          echo "🔍 Validating HTML structure..."
          if [ -f "index.html" ]; then
            echo "✅ index.html found"
            if grep -q "<html" index.html && grep -q "<head" index.html && grep -q "<body" index.html; then
              echo "✅ HTML structure is valid"
            else
              echo "❌ HTML structure is invalid"
              exit 1
            fi
          else
            echo "❌ index.html not found"
            exit 1
          fi

      - name: Validate CSS
        run: |
          echo "🎨 Validating CSS..."
          if [ -f "style.css" ]; then
            echo "✅ style.css found"
            if grep -q "{" style.css && grep -q "}" style.css; then
              echo "✅ CSS syntax appears valid"
            else
              echo "❌ CSS syntax may have issues"
              exit 1
            fi
          else
            echo "❌ style.css not found"
            exit 1
          fi

      - name: Check file sizes
        run: |
          echo "📊 Checking file sizes for performance..."
          for file in *.html *.css *.js; do
            if [ -f "$file" ]; then
              size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || echo "0")
              echo "📄 $file: ${size} bytes"
              if [ "$size" -gt 1048576 ]; then
                echo "⚠️  Warning: $file is larger than 1MB"
              fi
            fi
          done

    deploy:
      needs: quality-check
      runs-on: ubuntu-latest
      name: Deploy to Production

      if: github.ref == 'refs/heads/main'

      permissions:
        pages: write
        id-token: write
        contents: read

      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}

      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Optimize files for production
        run: |
          echo "🚀 Optimizing files for production..."
          mkdir -p dist
          cp index.html dist/
          cp style.css dist/
          if [ -f "script.js" ]; then
            cp script.js dist/
          fi
          echo "<!-- Deployed on $(date) via GitHub Actions -->" >> dist/index.html
          echo "✅ Files optimized and ready for deployment"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post-deployment verification
        run: |
          echo "🎉 Deployment completed!"
          echo "🌐 Your website should be available at: https://talktorobson.github.io/my-personal-website/"
          echo "⏱️  It may take a few minutes for changes to appear"

    performance-check:
      needs: deploy
      runs-on: ubuntu-latest
      name: Performance Verification

      if: github.ref == 'refs/heads/main'

      steps:
      - name: Wait for deployment
        run: |
          echo "⏳ Waiting 30 seconds for deployment to propagate..."
          sleep 30

      - name: Check website accessibility
        run: |
          echo "🔍 Checking if website is accessible..."
          url="https://talktorobson.github.io/my-personal-website/"
          if curl -s -f "$url" > /dev/null; then
            echo "✅ Website is accessible at $url"
          else
            echo "⚠️  Website may still be deploying or has issues"
          fi

      - name: Performance summary
        run: |
          echo "📈 Deployment Summary:"
          echo "🔗 URL: https://talktorobson.github.io/my-personal-website/"
          echo "📅 Deployed: $(date)"
          echo "🏗️  Built with: GitHub Actions"
          echo "🚀 Status: Production Ready"
